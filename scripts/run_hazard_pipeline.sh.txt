# ----------------------------------------------------------------------
# Script: run_hazard_pipeline.sh
# Purpose: Executes the climate hazard pipeline in sequence (setup + timeseries)
# Environment: JupyterHub / RStudio Server (Linux, nohup-safe)
# ----------------------------------------------------------------------

# Install htop
sudo apt install htop

# List any existing screens using (if you need to shut this is described at the end of this code):
screen -ls
# Always check before running a new job to see if Rscripts are running
ps aux | grep Rscript 


# Start a new screen (if clean)
screen -S hazards_job

# Define absolute paths to R scripts - AfriLabs
SETUP_SCRIPT="$HOME/rprojects/hazards_prototype/R/0_server_setup.R"
TIMESERIES_SCRIPT="$HOME/rprojects/hazards_prototype/R/1_make_timeseries.R"
HAZFREQ_SCRIPT="$HOME/rprojects/hazards_prototype/R/2_calculate_haz_freq.R"
EXTRACT_SCRIPT="$HOME/rprojects/hazards_prototype/R/3_freq_x_exposure.R"
PATCH_SCRIPT="$HOME/rprojects/hazards_prototype/R/misc/patch_wet_ndws_issue.R"
KILL_SCRIPT="$HOME/rprojects/hazards_prototype/scripts/kill.R"
LOG_FILE="$HOME/rprojects/hazards_prototype/logs/combined_run_$(date +%Y%m%d_%H%M%S).log"

# Define absolute paths to R scripts - CGlabs
SETUP_SCRIPT="$HOME/atlas/hazards_prototype/R/0_server_setup.R"
TIMESERIES_SCRIPT="$HOME/atlas/hazards_prototype/R/1_make_timeseries.R"
HAZFREQ_SCRIPT="$HOME/atlas/hazards_prototype/R/2_calculate_haz_freq.R"
EXTRACT_SCRIPT="$HOME/atlas/hazards_prototype/R/3_freq_x_exposure.R"
PATCH_SCRIPT="$HOME/atlas/hazards_prototype/R/misc/patch_wet_ndws_issue.R"
KILL_SCRIPT="$HOME/atlas/hazards_prototype/scripts/kill.R"
LOG_FILE="$HOME/atlas/hazards_prototype/logs/combined_run_$(date +%Y%m%d_%H%M%S).log"

# Create log directory if it doesn't exist
mkdir -p "$(dirname "$LOG_FILE")"

# Echo start
echo "Running hazard pipeline... Logs will be saved to:"
echo "$LOG_FILE"

# Run the scripts sequentially using Rscript + source - TIMESERIES_SCRIPT
nohup Rscript -e "source('$SETUP_SCRIPT'); source('$TIMESERIES_SCRIPT')" > "$LOG_FILE" 2>&1 &

# Run the scripts sequentially using Rscript + source - HAZFREQ_SCRIPT
nohup Rscript -e "source('$SETUP_SCRIPT'); source('$HAZFREQ_SCRIPT')" > "$LOG_FILE" 2>&1 &

# Run the scripts sequentially using Rscript + source - EXTRACT_SCRIPT
nohup Rscript -e "source('$SETUP_SCRIPT'); source('$EXTRACT_SCRIPT')" > "$LOG_FILE" 2>&1 &

# Run the scripts sequentially using Rscript + source - PATCH_SCRIPT
nohup Rscript -e "source('$SETUP_SCRIPT'); source('$PATCH_SCRIPT')" > "$LOG_FILE" 2>&1 &

# Notify user of background process
echo "Process started in background (PID $!). Use tail -f "$LOG_FILE" to monitor output."
tail -f "$LOG_FILE"

# If running multisession and workers are zombies that will not die try
pkill -9 -f rsession

# ----------------------------------------------------------------------
# If a session terminates and you want to restart the pipeline cleanly:

# In the screen terminal window:
    # If an R process is still running, stop it:
    # q()  # or Ctrl + C

# Then exit the shell:
    # exit

# Back in any terminal:
 # screen -ls

# You should see:
# No Sockets found in /run/screen/S-jovyan.

# Restart cleanly:
# screen -S hazards_job

# ----------------------------------------------------------------------
# If you need to look at system resouce use install htop

# sudo apt install htop